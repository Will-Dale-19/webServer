{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalew\\\\IdeaProjects\\\\webServer\\\\src\\\\ui\\\\src\\\\components\\\\Buttons.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  blue: {\n    default: \"#3f51b5\",\n    hover: \"#283593\"\n  }\n};\nconst Button = styled.button`\n  background-color: ${props => theme[props.theme].default};\n  color: white;\n  padding: 5px 15px;\n  border-radius: 5px;\n  outline: 0;\n  text-transform: uppercase;\n  margin: 10px 0px;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms;\n  &:hover {\n    background-color: ${props => theme[props.theme].hover};\n  }\n  &:disabled {\n    cursor: default;\n    opacity: 0.7;\n  }\n`;\n_c = Button;\nButton.defaultProps = {\n  theme: \"blue\"\n};\nconst ButtonToggle = styled(Button)`\n  opacity: 0.7;\n  cursor: default;\n  ${({\n  active\n}) => active && `\n    cursor: pointer;\n    opacity: 1; \n  `}\n`;\n_c2 = ButtonToggle;\nconst types = [\"Start Server\", \"Stop Server\"];\nfunction ToggleGroup() {\n  _s();\n  const [active, setActive] = useState(types[0]);\n  const [isDisabled, setDisabled] = useState(false);\n  const handleSubmit = () => {\n    setDisabled(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: types.map(type =>\n    /*#__PURE__*/\n    // This makes it so that if you click \"start server\",\n    // the active type is set to \"stop server\" to reflect\n    // the server status.\n    _jsxDEV(ButtonToggle, {\n      id: \"Button\" + type,\n      active: active === type,\n      onClick: () => {\n        if (type === types[0]) {\n          setActive(types[1]);\n        } else {\n          setActive(types[0]);\n        }\n        changeServerStatus(type);\n        handleSubmit();\n      },\n      disabled: isDisabled,\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(ToggleGroup, \"iM1f55Q+t4rML6iGjtfoIXqv3ss=\");\n_c3 = ToggleGroup;\nfunction clickMe() {\n  alert(\"You clicked me!\");\n}\nfunction changeServerStatus(type) {\n  alert(type);\n}\nconst Buttons = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clickMe,\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ToggleGroup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Buttons;\nexport default Buttons;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ButtonToggle\");\n$RefreshReg$(_c3, \"ToggleGroup\");\n$RefreshReg$(_c4, \"Buttons\");","map":{"version":3,"names":["styled","React","useState","jsxDEV","_jsxDEV","theme","blue","default","hover","Button","button","props","_c","defaultProps","ButtonToggle","active","_c2","types","ToggleGroup","_s","setActive","isDisabled","setDisabled","handleSubmit","children","map","type","id","onClick","changeServerStatus","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c3","clickMe","alert","Buttons","_c4","$RefreshReg$"],"sources":["C:/Users/dalew/IdeaProjects/webServer/src/ui/src/components/Buttons.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst theme = {\r\n    blue: {\r\n        default: \"#3f51b5\",\r\n        hover: \"#283593\"\r\n    }\r\n};\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => theme[props.theme].default};\r\n  color: white;\r\n  padding: 5px 15px;\r\n  border-radius: 5px;\r\n  outline: 0;\r\n  text-transform: uppercase;\r\n  margin: 10px 0px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 2px lightgray;\r\n  transition: ease background-color 250ms;\r\n  &:hover {\r\n    background-color: ${(props) => theme[props.theme].hover};\r\n  }\r\n  &:disabled {\r\n    cursor: default;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nButton.defaultProps = {\r\n    theme: \"blue\"\r\n};\r\n\r\nconst ButtonToggle = styled(Button)`\r\n  opacity: 0.7;\r\n  cursor: default;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    cursor: pointer;\r\n    opacity: 1; \r\n  `}\r\n`;\r\n\r\n\r\nconst types = [\"Start Server\", \"Stop Server\"];\r\n\r\nfunction ToggleGroup() {\r\n    const [active, setActive] = useState(types[0]);\r\n    const [isDisabled, setDisabled] = useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        setDisabled(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {types.map((type) => (\r\n\r\n                // This makes it so that if you click \"start server\",\r\n                // the active type is set to \"stop server\" to reflect\r\n                // the server status.\r\n                <ButtonToggle\r\n                    id = {\"Button\"+type}\r\n\r\n                    active={active === type}\r\n                    onClick={()=> {\r\n                        if (type === types[0]) {\r\n                            setActive(types[1])\r\n                        } else {\r\n                            setActive(types[0])\r\n                        }\r\n                        changeServerStatus(type)\r\n                        handleSubmit()\r\n                        }\r\n                    }\r\n                    disabled = { isDisabled }\r\n                >\r\n                    {type}\r\n                </ButtonToggle>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction clickMe() {\r\n    alert(\"You clicked me!\");\r\n}\r\n\r\nfunction changeServerStatus(type) {\r\n    alert(type)\r\n}\r\n\r\nconst Buttons = () => {\r\n    return (\r\n        <div>\r\n            <div><Button onClick={clickMe}>Button</Button></div>\r\n            <div><ToggleGroup /></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Buttons"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}