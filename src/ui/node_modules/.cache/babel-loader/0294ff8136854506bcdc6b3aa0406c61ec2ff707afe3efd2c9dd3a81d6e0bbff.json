{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalew\\\\IdeaProjects\\\\webServer\\\\src\\\\ui\\\\src\\\\pages\\\\Servers.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Servers = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  useLayoutEffect(() => {\n    const getServers = async () => {\n      const res = await fetch('/api/servers');\n      const servers = await res.json();\n      setServers(servers);\n    };\n    getServers().catch(e => {\n      console.log('error fetching customers: ' + e);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Server Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Server Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: servers.map(server => {\n          const {\n            serverId,\n            serverName,\n            serverLocation\n          } = server;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: serverId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: serverName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: serverLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)]\n          }, serverId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: clickMe,\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Servers, \"gBBo6X1GNLmsnSOrpHcN14KwsUM=\");\n_c = Servers;\nexport default Servers;\nvar _c;\n$RefreshReg$(_c, \"Servers\");","map":{"version":3,"names":["React","useLayoutEffect","useState","jsxDEV","_jsxDEV","Servers","_s","servers","setServers","getServers","res","fetch","json","catch","e","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","server","serverId","serverName","serverLocation","Button","onClick","clickMe","_c","$RefreshReg$"],"sources":["C:/Users/dalew/IdeaProjects/webServer/src/ui/src/pages/Servers.js"],"sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\r\n\r\nconst Servers = () => {\r\n    const [servers, setServers] = useState([])\r\n\r\n    useLayoutEffect(()=> {\r\n        const getServers = async() => {\r\n            const res = await fetch('/api/servers');\r\n            const servers = await res.json();\r\n            setServers(servers);\r\n        }\r\n        getServers().catch(e => {\r\n            console.log('error fetching customers: ' + e);\r\n        })\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <table>\r\n            <thead>\r\n            <th>ID</th>\r\n            <th>Server Name</th>\r\n            <th>Server Location</th>\r\n            </thead>\r\n            <tbody>\r\n            {servers.map(server => {\r\n                const {\r\n                    serverId,\r\n                    serverName,\r\n                    serverLocation\r\n                } = server;\r\n                return(\r\n                    <tr key={serverId}>\r\n                        <td>{serverId}</td>\r\n                        <td>{serverName}</td>\r\n                        <td>{serverLocation}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n        <Button onClick={clickMe}>Button</Button>\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Servers"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1CD,eAAe,CAAC,MAAK;IACjB,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAW;MAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;MACvC,MAAMJ,OAAO,GAAG,MAAMG,GAAG,CAACE,IAAI,CAAC,CAAC;MAChCJ,UAAU,CAACD,OAAO,CAAC;IACvB,CAAC;IACDE,UAAU,CAAC,CAAC,CAACI,KAAK,CAACC,CAAC,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGF,CAAC,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,CAAC;EAIF,oBACIV,OAAA;IAAAa,QAAA,gBACAb,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,gBACAb,OAAA;UAAAa,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACXjB,OAAA;UAAAa,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBjB,OAAA;UAAAa,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACRjB,OAAA;QAAAa,QAAA,EACCV,OAAO,CAACe,GAAG,CAACC,MAAM,IAAI;UACnB,MAAM;YACFC,QAAQ;YACRC,UAAU;YACVC;UACJ,CAAC,GAAGH,MAAM;UACV,oBACInB,OAAA;YAAAa,QAAA,gBACIb,OAAA;cAAAa,QAAA,EAAKO;YAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBjB,OAAA;cAAAa,QAAA,EAAKQ;YAAU;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBjB,OAAA;cAAAa,QAAA,EAAKS;YAAc;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAHpBG,QAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIb,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRjB,OAAA,CAACuB,MAAM;MAACC,OAAO,EAAEC,OAAQ;MAAAZ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAIV,CAAC;AAAAf,EAAA,CA9CKD,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAgDb,eAAeA,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}